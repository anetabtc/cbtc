import { Lucid } from "lucid-cardano";
import * as multisig_update from "../multisig.update";
import * as multisig_deploy from "../multisig.deploy";
import * as multisig_fullfill from "../multisig.fullfill";
import {
	ConfigFullFill,
	ConfigMultiSig,
	ConfigUpdateMultiSig,
	DeployedScripts,
} from "../types";
import * as utils from "../utils";
import * as user_request from "../user.request";
import * as user_burn from "../user.burn";

// Accounts generated with utils.generateAddressSeedPhrase()
// These account have StakingCredential
const signers = {
	account1: {
		seedPhrase:
			"accuse total squeeze adapt stand slam joy lamp poet party pear level sunny banana boil glue because either shine come drum stand shoulder damp",
		address:
			"addr_test1qzk8up9zntq4l08r53p7gmpsgc3jdg9fwk79wreqqpsm2r97fdk28qxaf96cj78p5dmupfqe8jrcfxjqrc4hectl93xqr2levc",
	}, // 100
	account2: {
		seedPhrase:
			"machine drip toe west mimic tissue fuel you audit almost segment ridge suffer wood diet priority reflect gadget crack weather course vast alpha minute",
		address:
			"addr_test1qqy4xaqqeqk8x08dghtyp32hdn40w3ph93k8erg6lt9qtquxdjv0eq7qec7p0vjux3cx3gclxnl4clpqwehzvxqgpjlsxd6uwq",
	}, // 100
	account3: {
		seedPhrase:
			"foster lunar steel trim echo blame emotion siege scissors problem audit slender soup daughter soap world symptom behind high lawsuit squeeze employ path rebuild",
		address:
			"addr_test1qp70hfk0dtqef3y77e7weduhes5qn9dyjflxsdtkanzttmkherm3zelk4cty8xnmpfx9k3hjmxsy3d3sn43469x79dsqd8azq2",
	}, // 100
	account11: {
		seedPhrase:
			"uniform monster match glimpse supply glide term load whip hard fee wrong behind curtain nephew lesson predict appear pink vendor doctor visit quality glory",
		address:
			"addr_test1qrs8llu8zcqst2dldrvh84f5jphnxjxxscmel4tes6jtm3jcfcs3snyd0tdklx8n9qnkdnvy7v2q20qxawsqsekny4gsuen575",
	}, // 100
	account12: {
		seedPhrase:
			"ugly thunder nut horn canvas common library this force solid winter guide spirit sure wagon vault bus lens mercy install wife club priority original",
		address:
			"addr_test1qz52xndt25hvu8evdshep4puv6jvvh9wmsfcm53x903rpw853z7tyfhplvl8gjq4hgpgcecmj0x2vfe2ppgkwwc7wejsqyv62y",
	}, // 100
	account13: {
		seedPhrase:
			"fire iron mirror accuse glass pact retire lava tongue vague clap combine solve prefer raven attract lens tape unable brave stock loyal okay try",
		address:
			"addr_test1qz6z9pah4v4legh2a6kren7pfl9fnclklvngg5jf8rrt0jjfpqpd6q2h56urmzl9uljzta5pwqfre5zuzckd9plyzf8qrjs37p",
	},
};

// Accounts generated with utils.generateAddressSeedPhrase()
// These account have StakingCredential
const user = {
	account1: {
		seedPhrase:
			"click path wonder art cage duty infant shy split rookie extend first unaware boat group provide exercise leopard size mammal monitor bamboo dilemma grow",
		address:
			"addr_test1qze80dj5wtpnnrflfjag7hdyn235vwqskhm0fr98kqhey4wwatz92rau7w5ny8lzctkc2tnhfxwvp9gze5yh8j957t6s6ejca0",
	},
};

// Only run this once to mint multisig nft and set datum with cosigners at multisig script
export const deploy = async (lucid: Lucid) => {
	const multiSigConfig: ConfigMultiSig = {
		requiredCount: 1,
		keys: [lucid.utils.paymentCredentialOf(signers.account1.address).hash],
	};

	console.log(multiSigConfig);

	const deployments = await multisig_deploy.submit(lucid, multiSigConfig);

	console.log(deployments);
};

export const deployments = {
	txHash: "c8f9428f50802218e50af2b0291cdbaedc70ff9b08c311fce8e3c07c8f9be897",
	scripts: {
		multiSigValidator: {
			type: "PlutusV2",
			script:
				"590abf590abc010000222323232325333573466e1d2002002132323232323232325333573466e1d2002002132323232325333573466e1d200400213232323232323232323253335734a6644666ae68008004528192999ab9a00110011335738921144d756c746953696756616c696461746f72206631000013332223371200464a666aae7c004520001332332322253335573e002200426600666e0000920023574400246600400400246444a666aae7c00440084cc00ccdc0001240046ae880048cc008008004004cdc02400090011aba200133232323002233002002001230022330020020012253335573e002297ae0132533357346008002266ae80004c00cd5d1001098019aba2002357420024664646460044660040040024600446600400400244a666aae7c0045280a999ab9a3375e6ae8400400c528898011aba200100100400137586ae84014dd69aba13574400a6eb0d5d0991aba2357446ae88d5d11aba20013574402a2a6644666ae68008004528192999ab9a00110011335738921144d756c746953696756616c696461746f7220663200001332233232323002233002002001230022330020020012253335573e002294454cc88ccd5cd0010008a50300335742002260046ae880048cc8c8c8c0088cc0080080048c0088cc008008004894ccd55cf8008a5115332233357340040022940c00cd5d0800898011aba20012337126eb4d55cf0009991199991911119919180111980100100091801119801001000912999aab9f001100515333573466ebcd55ce9aba10010061300435573c6ae840044c008d5d10008009ba9001002480008cccc8c8888cc8c8c0088cc0080080048c0088cc008008004894ccd55cf80088028a999ab9a3375e6aae74d5d0800803098021aab9e35742002260046ae88004004dd480080124000eb4dd58008031bae35573a0046eb8d55ce8009bab35573c0020026eacd5d08071bab357426ae8804c4c8c8c94ccd5cd19b87480000084c8c94cc88ccd5cd0010008a5032533357340022002266ae71241144d756c746953696756616c696461746f72206633000013371090000008a9991199ab9a00200114a064a666ae6800440044cd5ce249144d756c746953696756616c696461746f72206634000013371090001bad357426ae8800854cc88ccd5cd0010008a5032533357340022002266ae71241144d756c746953696756616c696461746f7220663500001337126eb4d5d09aba2002001132533357340022002266ae712401144d756c746953696756616c696461746f72206636000013233323230022330020020012300223300200200122253335573e004294454ccd5cd1991919180111980100100091801119801001000912999aab9f00114a02a666ae68cdd79aba100100314a2260046ae88004d5d08010008a501330033574400466ae80d5d0801000800a5eb80dd61aba10023253335573e00229000099919919112999aab9f00110021330033370000490011aba20012330020020012322253335573e002200426600666e0000920023574400246600400400200266e01200048008d5d10009bac35742002646aae78dd50008068992999ab9a00110011335738921144d756c746953696756616c696461746f722066370000133223375e6e9cc8d55cf1baa001002374e646aae78dd50008008108069aab9e00235573a0026ea8074526165333573466e1d20000021324994ccd55cf8008a4c2a66ae71241317074727946726f6d2850446174615265636f72645b5d293a206c697374206973206c6f6e676572207468616e207a65726f001615333573466e1d20020021324994ccd55cf8008a4c2a66ae712401317074727946726f6d2850446174615265636f72645b5d293a206c697374206973206c6f6e676572207468616e207a65726f00161533573892013f7265616368656420656e64206f662073756d207768696c65207374696c6c206e6f7420686176696e6720666f756e642074686520636f6e7374727563746f72001635573c0046aae74004dd500c991aab9e3754002032a666ae68cdc3a4000004264646464646464932999aab9f001149854cd5ce2481317074727946726f6d2850446174615265636f72645b5d293a206c697374206973206c6f6e676572207468616e207a65726f0016357440066eb4004d5d08009aba200333232323002233002002001230022330020020012253335573e002297ae0133574060066ae84004c008d5d10009192999ab9a3370e6e3400520381002153357389212c7074727946726f6d28505075624b657948617368293a206d757374206265203238206279746573206c6f6e670016375c0026eb0004d5d08008a99ab9c4913f7265616368656420656e64206f662073756d207768696c65207374696c6c206e6f7420686176696e6720666f756e642074686520636f6e7374727563746f72001635573c0046aae74004dd500a9919191919002a999ab9a3370e900000109919191919191924ca666aae7c004526153357389201317074727946726f6d2850446174615265636f72645b5d293a206c697374206973206c6f6e676572207468616e207a65726f0016357440066eb4004d5d08009aba200333232323002233002002001230022330020020012253335573e002297ae0133574060066ae84004c008d5d10009192999ab9a3370e6e3400520381002153357389212c7074727946726f6d28505075624b657948617368293a206d757374206265203238206279746573206c6f6e670016375c0026eb0004d5d08008a99ab9c4913f7265616368656420656e64206f662073756d207768696c65207374696c6c206e6f7420686176696e6720666f756e642074686520636f6e7374727563746f72001635573c0046aae74004dd50009aba1001153357389201475061747465726e206d61746368206661696c75726520696e2027646f2720626c6f636b206174207372632f4d756c746953696756616c696461746f722e68733a38323a332d3235001635573c0046aae74004dd51aba1357440026ae88c8d55cf1baa0013253335573e0022c2a666ae68d5d19aba20011357420022a66ae71241244c69737420636f6e7461696e73206d6f7265207468616e206f6e6520656c656d656e742e001633232323002233002002001230022330020020012253335573e002297ae0132533357346008002266ae80004c00cd5d1001098019aba2002357420024646464a666ae68cdc3a400000429404cdc79bae3574200200a6aae78008d55ce8009baa3235742646aae78dd50008009aba13235573c6ea8004004dd61aba1007375c6ae8400454cd5ce249475061747465726e206d61746368206661696c75726520696e2027646f2720626c6f636b206174207372632f4d756c746953696756616c696461746f722e68733a37373a332d3434001635573c0046aae74004dd5191aba13235573c6ea8004004d5d0800991aab9e375400200266446646460044660040040024600446600400400244a666aae7c004584c94ccd5cd199119baf374e646aae78dd50008011ba73235573c6ea8004004010d5d080089aba135744002260066ae88008c8d55cf1baa001357420020046eb0d5d08010019aba235744002646aae78dd50009aba1005357420022a66ae712401475061747465726e206d61746368206661696c75726520696e2027646f2720626c6f636b206174207372632f4d756c746953696756616c696461746f722e68733a37303a332d3139001635573c0046aae74004dd51aba135744002646aae78dd50008009",
		},
		multiSigMintingPolicy: {
			type: "PlutusV2",
			script:
				"59082f59082c01000033322222323232325333573466e1d2000002132323232323232325333573466e1d20040021323232323253335734646464a666ae68cdc3a40040042a6644666ae68008004528192999ab9a001100113357389201154d756c74695369674d696e74506f6c696379206635000013370e01c90000992999ab9a001100113357389201154d756c74695369674d696e74506f6c696379206636000013370e01a90010a9991199ab9a00200114a064a666ae6800440044cd5ce249154d756c74695369674d696e74506f6c696379206631000013370e01c90010a9991199ab9a00200114a064a666ae6800440044cd5ce249154d756c74695369674d696e74506f6c696379206632000013370e01a90000a9991199ab9a00200114a064a666ae6800440044cd5ce249154d756c74695369674d696e74506f6c696379206633000015332233357340040022940cdd7992999aab9f001161533357346ae8cd5d100089aba100115335738921244c69737420636f6e7461696e73206d6f7265207468616e206f6e6520656c656d656e742e001637586ae840200644cdc39bad357426ae880212002132533357340022002266ae712401154d756c74695369674d696e74506f6c69637920663400001332233232323002233002002001230022330020020012253335573e002294054cc8cd5cd0008a51300335742002260046ae880048c8cdd79ba73235573c6ea800400cdd3991aab9e37540020026ae84c8d55cf1baa00100100237586ae8404005cd55cf0011aab9d00137540262930b2999ab9a3370e900000109924ca666aae7c00452615335738921317074727946726f6d2850446174615265636f72645b5d293a206c697374206973206c6f6e676572207468616e207a65726f001615333573466e1d20020021324994ccd55cf8008a4c2a66ae712401317074727946726f6d2850446174615265636f72645b5d293a206c697374206973206c6f6e676572207468616e207a65726f00161533573892013f7265616368656420656e64206f662073756d207768696c65207374696c6c206e6f7420686176696e6720666f756e642074686520636f6e7374727563746f72001635573c0046aae74004dd5007991aab9e3754002646464646400aa666ae68cdc3a4000004264646464646464932999aab9f001149854cd5ce2481317074727946726f6d2850446174615265636f72645b5d293a206c697374206973206c6f6e676572207468616e207a65726f0016357440066eb4004d5d08009aba200333232323002233002002001230022330020020012253335573e002297ae0133574060066ae84004c008d5d10009192999ab9a3370e6e3400520381002153357389212c7074727946726f6d28505075624b657948617368293a206d757374206265203238206279746573206c6f6e670016375c0026eb0004d5d08008a99ab9c4913f7265616368656420656e64206f662073756d207768696c65207374696c6c206e6f7420686176696e6720666f756e642074686520636f6e7374727563746f72001635573c0046aae74004dd50009aba1001153357389201485061747465726e206d61746368206661696c75726520696e2027646f2720626c6f636b206174207372632f4d756c74695369674d696e74506f6c6963792e68733a35353a352d3331001635573c0046aae74004dd51aba1357440026ae88c8d55cf1baa0013253335573e0022c2a666ae68d5d19aba20011357420022a66ae71241244c69737420636f6e7461696e73206d6f7265207468616e206f6e6520656c656d656e742e001633232323002233002002001230022330020020012253335573e002297ae0132533357346008002266ae80004c00cd5d1001098019aba200235742002644646464a666ae68cdc3a400000429404cdc79bae3574200200a6aae78008d55ce8009baa3235742646aae78dd50008009aba13235573c6ea8004004dd70061bac35742006666444666666444466664646460044660040040024600446600400400244a666aae7c00448940044ccc00cd5d08009111801001898011aba2001332225333573466ebc008c00c004488c00800c48940040100080048c888c00800cc010004489400555ceaab9e3752004002466644646460044660040040024600446600400400244a666aae7c004400c4cc010d5d080098011aba2001223253335734600e002266e000040084008dd69aab9e00248000dd58008a4000466e200052000375c6ae84010dd59aba1357446ae88008ccc888cccccc8888cccc8c8c8c0088cc0080080048c0088cc008008004894ccd55cf800891280089998019aba10012223002003130023574400266444a666ae68cdd780118018008911801001891280080200100091911180100198020008912800aab9d5573c6ea40080048ccc88c8c8c0088cc0080080048c0088cc008008004894ccd55cf80088018998021aba10013002357440024464a666ae68c01c0044cdc000080108011bad35573c00490001bab0011480008cdc4240000026eb8d5d08019bab357426ae88d5d10009aba235744002646aae78dd50009aba100415335738921485061747465726e206d61746368206661696c75726520696e2027646f2720626c6f636b206174207372632f4d756c74695369674d696e74506f6c6963792e68733a34373a352d3436001635573c0046aae74004dd51aba135744002646aae78dd5000800a611e581cac7e04a29ac15fbce3a443e46c30462326a0a975bc570f200061b50c004c011e581cb8cf6213f0f6e79854ce2fd2a375ff6ef499c0d6a1b7b036a2aefd71004c012bd8799fd8799f58203a48075f9b48c39459a18dfa510412392ad6d30ac2839834cab918df13be1bafff01ff0001",
		},
		guardianValidator: {
			type: "PlutusV2",
			script:
				"59046b5904680100003322222323232325333573466e1d20020021323232323232323232325333573466e1d20020021323253335734a6644666ae68008004528192999ab9a00110011335738920114477561726469616e56616c696461746f722066310000135746664646460044660040040024600446600400400244a666aae7c00452f5c0264a666ae68c0100044cd5d000098019aba200213003357440046ae84004c88c8c8c94ccd5cd19b8748000008528099b8f375c6ae84004014d55cf0011aab9d0013754646ae84c8d55cf1baa00100135742646aae78dd50008008011bac35742014264a666ae6800440044cd5ce24914477561726469616e56616c696461746f7220663200001337109000199911199991199991919180111980100100091801119801001000912999aab9f00112250011333003357420024446004006260046ae8800494ccd5cd19baf00335573a0022446004006244a0020024644460040066aae780044894004dd48010009199911919180111980100100091801119801001000912999aab9f00110031330043574200260046ae8800488c94ccd5cd1803800899b800010021002375a6aae780092000375600229000119b8848000004dd700a1bab357426ae88c8d55cf1baa00132357426ae88c8d55cf1baa0010013253335573e0022c2a666ae68d5d19aba20011357420022a66ae712401244c69737420636f6e7461696e73206d6f7265207468616e206f6e6520656c656d656e742e001633232323002233002002001230022330020020012253335573e002297ae0132533357346008002266ae80004c00cd5d1001098019aba20023574200246644646464a666ae68cdc3a400000429404cdc79bae3574200200a6aae78008d55ce8009baa3235742646aae78dd50008009aba13235573c6ea8004004008d5d09aba23235573c6ea8004004dd61aba100b149858dd700a1bae357420022a66ae712401485061747465726e206d61746368206661696c75726520696e2027646f2720626c6f636b206174207372632f477561726469616e56616c696461746f722e68733a3132383a352d3436001635573c0046aae74004dd5191aba13235573c6ea8004004d5d0800991aab9e375400200266446646460044660040040024600446600400400244a666aae7c004584c94ccd5cd1919baf374e646aae78dd50008029ba73235573c6ea8004004d5d080089aba135744002260066ae88008c8d55cf1baa001357420020046eb0d5d0802002991aba2357446ae88004d5d10009aba2357440026ae88d5d1000991aab9e37540026ae84014d5d08008a99ab9c4901485061747465726e206d61746368206661696c75726520696e2027646f2720626c6f636b206174207372632f477561726469616e56616c696461746f722e68733a3132313a352d3231001635573c0046aae74004dd51aba135744002646aae78dd5000800a611e581cb8cf6213f0f6e79854ce2fd2a375ff6ef499c0d6a1b7b036a2aefd71004c011e581c09af7253df4ba912194a8821aa6f232b737cc45943571a596f66c5290001",
		},
		cBTCMintingPolicy: {
			type: "PlutusV2",
			script:
				"",
		},
	} as DeployedScripts,
	unit: "09af7253df4ba912194a8821aa6f232b737cc45943571a596f66c5294d756c746953696743657274",
};

export const update = async (lucid: Lucid) => {
	const configUpdate: ConfigUpdateMultiSig = {
		unit: deployments.unit,
		multiSigValidator: deployments.scripts.multiSigValidator,
		oldKeys: [lucid.utils.paymentCredentialOf(signers.account1.address).hash],
		newConfig: {
			requiredCount: 2,
			keys: [
				lucid.utils.paymentCredentialOf(signers.account1.address).hash,
				lucid.utils.paymentCredentialOf(signers.account2.address).hash,
				lucid.utils.paymentCredentialOf(signers.account3.address).hash,
			],
		},
	};
	console.log(configUpdate);
	lucid.selectWalletFromSeed(signers.account1.seedPhrase);

	const updateTx = await multisig_update.build(lucid, configUpdate);

	lucid.selectWalletFromSeed(signers.account1.seedPhrase);
	const witness1 = await multisig_update.signWitness(
		lucid,
		updateTx.toString()
	);

	// lucid.selectWalletFromSeed(signers.account2.seedPhrase);
	// const witness2 = await multisig_update.signWitness(
	// 	lucid,
	// 	updateTx.toString()
	// );

	// lucid.selectWalletFromSeed(signers.account3.seedPhrase);
	// const witness3 = await multisig_update.signWitness(
	// 	lucid,
	// 	updateTx.toString()
	// );

	const assembleTx = await multisig_update.assemble(
		lucid,
		updateTx.toString(),
		// [witness1,witness2, witness3]
		[witness1]
	);

	console.log(assembleTx);
};

// Fullfill requests from users
export const fullfil = async (lucid: Lucid) => {
	const configSign: ConfigFullFill = {
		unit: deployments.unit,
		scripts: deployments.scripts,
		keys: [
			lucid.utils.paymentCredentialOf(signers.account1.address).hash,
			lucid.utils.paymentCredentialOf(signers.account2.address).hash,
			lucid.utils.paymentCredentialOf(signers.account3.address).hash,
		],
	};

	lucid.selectWalletFromSeed(signers.account1.seedPhrase);

	// Get Valid Datums from Guardian Script
	const validDatumUtxoList = await utils.getValidDatums(
		lucid,
		deployments.scripts.guardianValidator
	);
	if (!validDatumUtxoList?.length) {
		console.log("No valid datums at Guardian Script");
		return null;
	}
	console.log("validDatumUtxoList: ", validDatumUtxoList);

	// Build transaction with Valid Datums and UTXOs
	// Guardian Minter, Guardian Script and Guardian Multisig are inlcuded
	const fulfillTx = await multisig_fullfill.build(
		lucid,
		[validDatumUtxoList[0]],
		configSign
	);

	lucid.selectWalletFromSeed(signers.account1.seedPhrase);
	const witness1 = await multisig_fullfill.signWitness(
		lucid,
		fulfillTx.toString()
	);

	lucid.selectWalletFromSeed(signers.account2.seedPhrase);
	const witness2 = await multisig_fullfill.signWitness(
		lucid,
		fulfillTx.toString()
	);

	lucid.selectWalletFromSeed(signers.account3.seedPhrase);
	const witness3 = await multisig_fullfill.signWitness(
		lucid,
		fulfillTx.toString()
	);

	const assembleTx = await multisig_fullfill.assemble(
		lucid,
		fulfillTx.toString(),
		[witness1, witness2, witness3]
	);

	console.log(assembleTx);
};

export const request = async (lucid: Lucid) => {
	lucid.selectWalletFromSeed(user.account1.seedPhrase);

	// This Address has Staking Credential
	const myAddress = await lucid.wallet.address();
	const bridgeAmount = 10;
	const btcAddress = "15U6C9gZs5G3i11gTfmhqCaKK6V7bqGdmi";
	console.log(`Requesting ${bridgeAmount} BTC to ${myAddress}`);
	const result = await user_request.submit(
		lucid,
		bridgeAmount,
		myAddress,
		btcAddress,
		deployments.scripts.guardianValidator
	);
	console.log(result);
};

export const burn = async (lucid: Lucid) => {
	lucid.selectWalletFromSeed(user.account1.seedPhrase);
	const burnAmount = -6;
	const btcAddress = "15U6C9gZs5G3i11gTfmhqCaKK6V7bqGdmi";
	const result = await user_burn.submit(
		lucid,
		burnAmount,
		btcAddress,
		deployments.scripts.cBTCMintingPolicy
	);
	console.log(result);
};
